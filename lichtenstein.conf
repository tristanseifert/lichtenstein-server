################################################################################
# this is a simple config file for testing purposes. all paths fall in the
# working directory.
################################################################################

################################################################################
# Overall configuration of the server
[server]
# Server UUID: this must be set before the server is started, and should not be
# changed after nodes have been paired.
#
# Default: (none)
uuid = 11ae9ede-93bf-4218-9994-a1dfbc42abbc

################################################################################
# Various parameters that configure the Lichtenstein API server
[api]
# Port on which the lichtenstein server API listens. This can be any free port
# number.
#
# Default: 45678
port = 45678

# Address on which the API server listens to requests. You may need to change
# this if there are multiple interfaces on the server.
#
# Default: 0.0.0.0
listen = 0.0.0.0

# How many connections can be pending at one time - e.g. the backlog argument to
# the listen(2) call.
#
# Default: 10
backlog = 10

# Path to the certificate with which the API server is secured.
#
# Default: (none)
certPath = store/cert.pem

# Path to the private key associated with the certificafte.
#
# Default: (none)
certKeyPath = store/key.pem

# Should the server API be advertised via mDNS/Zeroconf?
#
# Default: true
advertise = true

################################################################################
# Various parameters that configure the Lichtenstein real-time data server
[realtime]
# Port on which the real-time service listens. Port 7420 is the default (it has
# been registered for this purpose)
#
# Default: 7420
port = 7420

# Address on which the real-time server listens to requests. You may need to
# change this if there are multiple interfaces on the server.
#
# Default: 0.0.0.0
listen = 0.0.0.0

# Path to the certificate with which the API server is secured.
#
# Default: (none)
certPath = store/cert.pem

# Path to the private key associated with the certificafte.
#
# Default: (none)
certKeyPath = store/key.pem

# Should the realtime API be advertised via mDNS/Zeroconf?
#
# Default: true
advertise = false

################################################################################
# Adjust the operation of the database. Typically, you should only need to
# change the path, but if some of the sqlite options being used are causing
# problems on your system, you can disable them.
[db]
# Path to the sqlite database used to persist data. The directory MUST be
# writeable by the process, since sqlite needs to create some temporary files
# in that directory.
#
# Default: ""
path = store/lichtenstein.sqlite3

# How to deal with the journal; default is WAL. See the sqlite docs for
# more info: https://sqlite.org/pragma.html#pragma_journal_mode
#
# This should really only be changed if the database is, for whatever reason, on
# a network filesystem, EVEN IF the filesystem "supports" file locking. Using
# WAL on a network filesystem with broken locking (most of them) will result in
# data corruption: TRUNCATE is recommended in that case.
#
# Default: WAL
journal = WAL

# How frequently checkpoint operations should be performed, in seconds. These
# operations will reconcile the WAL back into the database itself. Set to 0 to
# disable background checkpointing.
#
# This is only applicable if the journal mode is WAL.
#
# Default: 0
checkpointInterval = 3600

# When set, wrap all calls into SQLite around a mutex. This has the effect of
# forcefully serializing access to the database. This is mostly intended as a
# debugging feature.
#
# Default: false
serializeAccess = true

################################################################################
[command]
# Mode for the command socket: either "unix" to listen on a domain socket (whose
# location is specified by socketPath) or "tcp" to listen on an IP address/port
# combination (specified by listen/port).
#
# Default: tcp
mode = tcp

# Path to the command socket when the command server runs in domain socket mode.
#
# This option is ignored unless mode is unix.
#
# Default: ""
socketPath = ./lichtenstein.sock

# When set, attempt to unlink the socket on startup. This should usually always
# be true unless there's some other shenanigans going on.
#
# This option is ignored unless mode is unix.
#
# Default: true
unlinkSocket = true

# IP address to listen on when the command server operates in TCP mode.
#
# This option is ignored unless mode is tcp.
#
# Default: 0.0.0.0 (all interfaces)
listen = 0.0.0.0

# Port to listen on when the command server operates in TCP mode.
#
# This option is ignored unless mode is tcp.
#
# Default: 7421
port = 7421

# How many connections can be pending at one time - e.g. the backlog argument to
# the listen(2) call.
#
# This option is ignored unless mode is tcp.
#
# Default: 10
backlog = 10

# Determines whether JSON sent back to the client is pretty-printed (i.e. with
# spaces and indentation for human readability).
#
# default: false
humanReadableResponses = true

################################################################################
# Parameters to control logging output. All logs are written to the specified
# file, and optionally to stderr as well. The verbosity of logging can also
# be adjusted.
[logging]
# Log file
#
# Default: "", no logging to file takes place
file = ./lichtenstein.log

# Verbosity of logging; negative values indicate verbose logging, whereas a
# positive value indicates the lowest log level to output. (info messages are 0,
# warnings are 1, and errors are 2; fatal messages are always logged.)
#
# Default: 0
verbosity = -1

# When set, log to stderr.
#
# Default: true
stderr = true

################################################################################
# Various knobs to control the effect runner.
#
# The effect runner is responsible for actually executing the effects for every
# group, converting the framebuffer from HSI to the appropriate output format
# for each channel, and handing the data off to be sent over the network.
[runner]
# Maximum number of threads to use for the runner's thread pool, on which all
# work is done. Set this to zero to automatically detect the most optimal number
# of threads (number of cores / 2)
#
# Default: 0
maxThreads = 0

# Frames per second at which the effects run at.
#
# Anything more than about 60 becomes problematic for hardware nodes, so it is
# recommended not to set this value significantly higher than that.
#
# Default: 30
fps = 42

################################################################################
# Configuration for the actual Lichtenstein protocol handler
#
[proto]
# How many milliseconds to wait for a node to acknowledge a framebuffer write.
# The lower this is the higher frame rates can be, since data is not output
# until all nodes acknowledge the write, they time out, or a combination of the
# two.
#
# This should be set reasonably low if the devices are all on the same local
# network, since the major source of delay is the actual packet processing.
#
# Default: 5ms
writeTimeout = 5

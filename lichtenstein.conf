################################################################################
# this is a simple config file for testing purposes. all paths fall in the
# working directory.
################################################################################

################################################################################
# Adjust the operation of the database. Typically, you should only need to
# change the path, but if some of the sqlite options being used are causing
# problems on your system, you can disable them.
[db]
# Path to the sqlite database used to persist data. The directory MUST be
# writeable by the process, since sqlite needs to create some temporary files
# in that directory.
path = db/lichtenstein.sqlite3

# How to deal with the journal; default is WAL. See the sqlite docs for
# more info: https://sqlite.org/pragma.html#pragma_journal_mode
#
# This should really only be changed if the database is, for whatever reason, on
# a network filesystem, EVEN IF the filesystem "supports" file locking. Using
# WAL on a network filesystem with broken locking (most of them) will result in
# data corruption: TRUNCATE is recommended in that case.
journal = WAL

# How frequently checkpoint operations should be performed, in seconds. These
# operations will reconcile the WAL back into the database itself. Set to 0 to
# disable background checkpointing.
#
# This is only applicable if the journal mode is WAL.
checkpointInterval = 3600

################################################################################
[command]
# Path to the command socket
socketPath = ./lichtenstein.sock

# When set, attempt to unlink the socket on startup. This should usually always
# be true unless there's some other shenanigans going on.
unlinkSocket = true

################################################################################
# Parameters to control logging output. All logs are written to the specified
# file, and optionally to stderr as well. The verbosity of logging can also
# be adjusted.
[logging]
# Log file
file = ./lichtenstein.log

# Verbosity of logging; negative values indicate verbose logging, whereas a
# positive value indicates the lowest log level to output. (info messages are 0,
# warnings are 1, and errors are 2; fatal messages are always logged.)
verbosity = -2

# When set, log to stderr.
stderr = true
